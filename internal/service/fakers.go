// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"confluence_fake/importserv"
	"confluence_fake/internal/consts"
	"context"

	"github.com/gogf/gf/v2/os/gcache"
)

type IFakers interface {
	ConfigSpaces(total int) error
	CreateSpace(space *importserv.ConfluenceSpaceData) error
	ConfigGroup(gpName []string) error
	ConfigUser(total int, inGroup string) error
	CreateUser(user *importserv.UserConfluence) error
	GetAllFakeSpace(ctx context.Context, limit int, start int) (out *importserv.FakeConfluenceSpaceResult, err error)
	GetAllGrout(ctx context.Context, limit int, start int) (out *importserv.FakeGroupResult, err error)
	GetAllConfulenceUserByGroupName(ctx context.Context, gpName string, limit int, start int) (out *importserv.FakeGroupUserListResp, err error)
	GetConfulenceUserUserName(ctx context.Context, userName string) (out *importserv.UserConfluence, err error)
	FakeCheckConfig(ctx context.Context, result consts.SetConfigFakeResult)
	SetCache(ctx context.Context, k interface{}, v interface{})
	GetCache(ctx context.Context) *gcache.Cache
	FakeSpaceListByTotal(ctx context.Context, total int) (out []*importserv.ConfluenceSpaceListResp, err error)
}

var localFakers IFakers

func Fakers() IFakers {
	if localFakers == nil {
		panic("implement not found for interface IFakers, forgot register?")
	}
	return localFakers
}

func RegisterFakers(i IFakers) {
	localFakers = i
}
